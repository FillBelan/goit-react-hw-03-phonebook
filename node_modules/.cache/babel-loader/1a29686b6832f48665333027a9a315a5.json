{"ast":null,"code":"var _jsxFileName = \"C:\\\\GitHubProjects\\\\goit-react-hw-02-phonebook\\\\src\\\\components\\\\ContactForm\\\\ContactForm.jsx\";\nimport React from 'react';\nimport { nanoid } from 'nanoid';\nimport { Formik } from 'formik';\nimport PropTypes from 'prop-types';\nimport { FormLabel, ContactsForm, FormInput, SubmitButton } from './ContactForm.styled';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialValues = {\n  name: '',\n  number: ''\n};\nconst nameId = nanoid();\nconst numberId = nanoid();\nexport const ContactForm = _ref => {\n  let {\n    onFormSubmit\n  } = _ref;\n\n  const handleSubmit = (values, _ref2) => {\n    let {\n      resetForm\n    } = _ref2;\n    onFormSubmit(values);\n    resetForm();\n  };\n\n  return /*#__PURE__*/_jsxDEV(Formik, {\n    initialValues: initialValues,\n    onSubmit: handleSubmit,\n    children: /*#__PURE__*/_jsxDEV(ContactsForm, {\n      autoComplete: \"off\",\n      children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n        htmlFor: nameId,\n        children: [\"Name\", /*#__PURE__*/_jsxDEV(FormInput, {\n          type: \"text\",\n          name: \"name\",\n          pattern: \"^[a-zA-Z\\u0430-\\u044F\\u0410-\\u042F]+(([' -][a-zA-Z\\u0430-\\u044F\\u0410-\\u042F ])?[a-zA-Z\\u0430-\\u044F\\u0410-\\u042F]*)*$\",\n          title: \"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\",\n          required: true,\n          id: nameId // onChange={this.handleInputChange}\n\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormLabel, {\n        htmlFor: numberId,\n        children: [\"Number\", /*#__PURE__*/_jsxDEV(FormInput, {\n          type: \"tel\",\n          name: \"number\",\n          pattern: \"\\\\+?\\\\d{1,4}?[-.\\\\s]?\\\\(?\\\\d{1,3}?\\\\)?[-.\\\\s]?\\\\d{1,4}[-.\\\\s]?\\\\d{1,4}[-.\\\\s]?\\\\d{1,9}\",\n          title: \"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\",\n          required: true,\n          id: numberId // onChange={this.handleInputChange}\n\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(SubmitButton, {\n        type: \"submit\",\n        children: \"Add contact\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n_c = ContactForm;\nContactForm.propTypes = {\n  onFormSubmit: PropTypes.func\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"ContactForm\");","map":{"version":3,"sources":["C:/GitHubProjects/goit-react-hw-02-phonebook/src/components/ContactForm/ContactForm.jsx"],"names":["React","nanoid","Formik","PropTypes","FormLabel","ContactsForm","FormInput","SubmitButton","initialValues","name","number","nameId","numberId","ContactForm","onFormSubmit","handleSubmit","values","resetForm","propTypes","func"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,QAAuB,QAAvB;AACA,SAASC,MAAT,QAAuB,QAAvB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,SACEC,SADF,EAEEC,YAFF,EAGEC,SAHF,EAIEC,YAJF,QAKO,sBALP;;AAOA,MAAMC,aAAa,GAAG;AAAEC,EAAAA,IAAI,EAAE,EAAR;AAAYC,EAAAA,MAAM,EAAE;AAApB,CAAtB;AAEA,MAAMC,MAAM,GAAGV,MAAM,EAArB;AACA,MAAMW,QAAQ,GAAGX,MAAM,EAAvB;AAEA,OAAO,MAAMY,WAAW,GAAG,QAAsB;AAAA,MAArB;AAAEC,IAAAA;AAAF,GAAqB;;AAC/C,QAAMC,YAAY,GAAG,CAACC,MAAD,YAA2B;AAAA,QAAlB;AAAEC,MAAAA;AAAF,KAAkB;AAC9CH,IAAAA,YAAY,CAACE,MAAD,CAAZ;AACAC,IAAAA,SAAS;AACV,GAHD;;AAIA,sBACE,QAAC,MAAD;AAAQ,IAAA,aAAa,EAAET,aAAvB;AAAsC,IAAA,QAAQ,EAAEO,YAAhD;AAAA,2BACE,QAAC,YAAD;AAAc,MAAA,YAAY,EAAC,KAA3B;AAAA,8BACE,QAAC,SAAD;AAAW,QAAA,OAAO,EAAEJ,MAApB;AAAA,wCAEE,QAAC,SAAD;AACE,UAAA,IAAI,EAAC,MADP;AAEE,UAAA,IAAI,EAAC,MAFP;AAGE,UAAA,OAAO,EAAC,wHAHV;AAIE,UAAA,KAAK,EAAC,wIAJR;AAKE,UAAA,QAAQ,MALV;AAME,UAAA,EAAE,EAAEA,MANN,CAOE;;AAPF;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAaE,QAAC,SAAD;AAAW,QAAA,OAAO,EAAEC,QAApB;AAAA,0CAEE,QAAC,SAAD;AACE,UAAA,IAAI,EAAC,KADP;AAEE,UAAA,IAAI,EAAC,QAFP;AAGE,UAAA,OAAO,EAAC,wFAHV;AAIE,UAAA,KAAK,EAAC,8FAJR;AAKE,UAAA,QAAQ,MALV;AAME,UAAA,EAAE,EAAEA,QANN,CAOE;;AAPF;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cAbF,eAyBE,QAAC,YAAD;AAAc,QAAA,IAAI,EAAC,QAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAzBF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AA+BD,CApCM;KAAMC,W;AAsCbA,WAAW,CAACK,SAAZ,GAAwB;AACtBJ,EAAAA,YAAY,EAAEX,SAAS,CAACgB;AADF,CAAxB","sourcesContent":["import React from 'react';\r\nimport { nanoid } from 'nanoid';\r\nimport { Formik } from 'formik';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport {\r\n  FormLabel,\r\n  ContactsForm,\r\n  FormInput,\r\n  SubmitButton,\r\n} from './ContactForm.styled';\r\n\r\nconst initialValues = { name: '', number: '' };\r\n\r\nconst nameId = nanoid();\r\nconst numberId = nanoid();\r\n\r\nexport const ContactForm = ({ onFormSubmit }) => {\r\n  const handleSubmit = (values, { resetForm }) => {\r\n    onFormSubmit(values);\r\n    resetForm();\r\n  };\r\n  return (\r\n    <Formik initialValues={initialValues} onSubmit={handleSubmit}>\r\n      <ContactsForm autoComplete=\"off\">\r\n        <FormLabel htmlFor={nameId}>\r\n          Name\r\n          <FormInput\r\n            type=\"text\"\r\n            name=\"name\"\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\r\n            required\r\n            id={nameId}\r\n            // onChange={this.handleInputChange}\r\n          />\r\n        </FormLabel>\r\n        <FormLabel htmlFor={numberId}>\r\n          Number\r\n          <FormInput\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\r\n            required\r\n            id={numberId}\r\n            // onChange={this.handleInputChange}\r\n          />\r\n        </FormLabel>\r\n        <SubmitButton type=\"submit\">Add contact</SubmitButton>\r\n      </ContactsForm>\r\n    </Formik>\r\n  );\r\n};\r\n\r\nContactForm.propTypes = {\r\n  onFormSubmit: PropTypes.func,\r\n};\r\n"]},"metadata":{},"sourceType":"module"}